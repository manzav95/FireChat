{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","useAuthState","user","className","SignOut","ChatRoom","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","currentUser","signOut","query","collection","orderBy","limit","useCollectionData","idField","messages","map","msg","ChatMessage","message","id","props","text","uid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAmDZC,MAjDf,WAAgB,IAAD,EACEC,YAAaH,GAArBI,EADM,oBAGb,OACE,sBAAKC,UAAU,MAAf,UACE,iCACE,cAACC,EAAD,MAGF,kCAAUF,EAAO,cAACG,EAAD,IAAe,cAACC,EAAD,SAIpC,SAASA,IAMP,OAAO,wBAAQC,QALU,WACvB,IAAMC,EAAW,IAAInB,IAASS,KAAKW,mBACnCX,EAAKY,gBAAgBF,IAGhB,gCAGT,SAASJ,IACP,OACEN,EAAKa,aACH,wBAAQJ,QAAS,kBAAMT,EAAKc,WAA5B,sBAIN,SAASP,IACP,IACMQ,EADcd,EAAUe,WAAW,YACfC,QAAQ,aAAaC,MAAM,IAFnC,EAICC,YAAkBJ,EAAO,CAAEK,QAAS,OAAhDC,EAJW,oBAKlB,OACE,8BACGA,GACCA,EAASC,KAAI,SAACC,GAAD,OAAS,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,SAKpD,SAASF,EAAYG,GAAQ,IAAD,EACJA,EAAMF,QAApBG,EADkB,EAClBA,KADkB,EACZC,IAEd,OAAO,4BAAID,MCxDAE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c55fb866.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyD-HSxkEyYw7RVGGTm7KTZwfev7z3l5Sic',\n  authDomain: 'firechat-35474.firebaseapp.com',\n  projectId: 'firechat-35474',\n  storageBucket: 'firechat-35474.appspot.com',\n  messagingSenderId: '193726300442',\n  appId: '1:193726300442:web:4a18067b6e2651441baca3',\n  measurementId: 'G-1DPM4MSDQM',\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className='App'>\n      <header>\n        <SignOut />\n      </header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n\n  function SignIn() {\n    const signInWithGoogle = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      auth.signInWithPopup(provider);\n    };\n\n    return <button onClick={signInWithGoogle}>Sig In With Google</button>;\n  }\n\n  function SignOut() {\n    return (\n      auth.currentUser && (\n        <button onClick={() => auth.signOut()}>Sign Out</button>\n      )\n    );\n  }\n  function ChatRoom() {\n    const messagesRef = firestore.collection('messages');\n    const query = messagesRef.orderBy('createdAt').limit(25);\n\n    const [messages] = useCollectionData(query, { idField: 'id' });\n    return (\n      <div>\n        {messages &&\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n      </div>\n    );\n  }\n\n  function ChatMessage(props) {\n    const { text, uid } = props.message;\n\n    return <p>{text}</p>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}